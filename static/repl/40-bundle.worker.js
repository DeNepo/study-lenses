self.webpackChunk([40],{53:function(e,r,n){"use strict";n.r(r),r.default='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface PromiseFulfilledResult<T> {\r\n    status: "fulfilled";\r\n    value: T;\r\n}\r\n\r\ninterface PromiseRejectedResult {\r\n    status: "rejected";\r\n    reason: any;\r\n}\r\n\r\ntype PromiseSettledResult<T> = PromiseFulfilledResult<T> | PromiseRejectedResult;\r\n\r\ninterface PromiseConstructor {\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all\r\n     * of the provided Promises resolve or reject.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    allSettled<T extends readonly unknown[] | readonly [unknown]>(values: T):\r\n        Promise<{ -readonly [P in keyof T]: PromiseSettledResult<T[P] extends PromiseLike<infer U> ? U : T[P]> }>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all\r\n     * of the provided Promises resolve or reject.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    allSettled<T>(values: Iterable<T>): Promise<PromiseSettledResult<T extends PromiseLike<infer U> ? U : T>[]>;\r\n}\r\n'}});